plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'jacoco'
    id 'org.sonarqube' version '3.3'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

group = 'com.ronja.crm'

def versionMajor = 0
def versionMinor = 3
def versionPatch = 3
version = "R${versionMajor}.${versionMinor}.${versionPatch}"

ext {
    flywayVersion = '7.14.0'
    testcontainersVersion = '1.16.0'
    jacocoDestinationFile = file("$buildDir/jacoco/test.exec")
    sonarProjectName = 'RonjaServer'
    sonarProjectKey = 'com.ronja.crm.ronjaserver'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "mysql:mysql-connector-java"
    implementation "org.flywaydb:flyway-core:${flywayVersion}"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.testcontainers:junit-jupiter:${testcontainersVersion}"
    testImplementation "org.testcontainers:mysql:${testcontainersVersion}"
}

test {
    useJUnitPlatform()
    jacoco {
        destinationFile = file(jacocoDestinationFile)
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
}

jacoco {
    toolVersion = '0.8.7'
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "BranislavBeno_RonjaServer"
    }
}

bootBuildImage {
    imageName = "beo1975/ronja-server:${versionMajor}.${versionMinor}.${versionPatch}"
}

shadowJar{
    setArchiveFileName('ronja-server.jar')
}

