plugins {
    id 'java'
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'jacoco'
    id 'org.sonarqube' version '3.3'
    id 'com.gorylenko.gradle-git-properties' version '2.4.0'
    id 'com.github.ben-manes.versions' version '0.42.0'
}

group = 'com.ronja.crm'

def versionMajor = 1
def versionMinor = 3
def versionPatch = 1
version = "R${versionMajor}.${versionMinor}.${versionPatch}" as Object

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

ext {
    set('sonarProjectName', 'RonjaServer') as Object
    set('sonarProjectKey', 'com.ronja.crm.ronjaserver') as Object
}

repositories {
    mavenCentral()
}

var flywayVersion = '8.5.5'
var bouncyCastleVersion = "1.70"
dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-webflux")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("mysql:mysql-connector-java")
    implementation("io.micrometer:micrometer-registry-prometheus:1.8.4")
    implementation("org.flywaydb:flyway-core:${flywayVersion}")
    implementation("org.flywaydb:flyway-mysql:${flywayVersion}")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:mysql")
    testImplementation "org.testcontainers:mockserver"
    testImplementation "org.mock-server:mockserver-client-java:5.13.0"
    testImplementation "org.bouncycastle:bcprov-jdk15on:${bouncyCastleVersion}"
    testImplementation "org.bouncycastle:bcpkix-jdk15on:${bouncyCastleVersion}"
    testImplementation("io.rest-assured:spring-mock-mvc:5.0.0")
    testImplementation "com.squareup.okhttp3:okhttp:5.0.0-alpha.6"
    testImplementation "com.squareup.okhttp3:mockwebserver:5.0.0-alpha.6"
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:1.16.3"
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
}

springBoot {
    buildInfo()
}

jacoco {
    toolVersion = '0.8.7'
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "BranislavBeno_RonjaServer"
    }
}

bootJar {
    archiveFileName = "ronja-server.jar"
}

bootBuildImage {
    imageName = "beo1975/ronja-server:${versionMajor}.${versionMinor}.${versionPatch}"
}
